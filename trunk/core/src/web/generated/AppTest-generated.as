
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      AppTest
 *  Source:     D:\workspacenew\core\flex_src\AppTest.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.02.21 11:56:42 CST
 */

package 
{

import com.shangkang.front.components.SimpleApplication;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.Canvas;
import mx.controls.Button;
import mx.controls.DateField;
import mx.controls.Label;
import mx.controls.TextInput;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.styles.*;


[Frame(extraClass="_AppTest_FlexInit")]

[Frame(factoryClass="_AppTest_mx_managers_SystemManager")]


//  begin class def
public class AppTest
    extends com.shangkang.front.components.SimpleApplication
    implements mx.binding.IBindingClient
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var btn1 : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var cv : mx.containers.Canvas;

    [Bindable]
	/**
 * @private
 **/
    public var lb : mx.controls.Label;

    [Bindable]
	/**
 * @private
 **/
    public var password : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var searchStr : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var searchStr2 : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var user_name : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var user_password : mx.controls.TextInput;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: com.shangkang.front.components.SimpleApplication
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Canvas
        ,
        id: "cv"
        ,
        propertiesFactory: function():Object { return {
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              id: "lb"
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 26,
                width: 88
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "password"
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 6
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "searchStr"
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 71
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              id: "btn1"
              ,
              events: {
                click: "__btn1_click"
              }
              ,
              propertiesFactory: function():Object { return {
                label: "搜索",
                x: 187,
                y: 71
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "searchStr2"
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 154
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              events: {
                click: "___AppTest_Button2_click"
              }
              ,
              propertiesFactory: function():Object { return {
                label: "搜索",
                x: 187,
                y: 154
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 237,
                text: "姓名：",
                width: 46,
                height: 20
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "user_name"
              ,
              propertiesFactory: function():Object { return {
                x: 54,
                y: 235
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Label
              ,
              propertiesFactory: function():Object { return {
                x: 10,
                y: 284,
                text: "密码："
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.TextInput
              ,
              id: "user_password"
              ,
              propertiesFactory: function():Object { return {
                x: 53,
                y: 282,
                displayAsPassword: true
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.controls.Button
              ,
              events: {
                click: "___AppTest_Button3_click"
              }
              ,
              propertiesFactory: function():Object { return {
                x: 276,
                y: 284,
                label: "插入"
              }}
            })
          ]
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.DateField
        ,
        propertiesFactory: function():Object { return {
          x: 10,
          y: 400,
          formatString: "YYYY-MM-DD"
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function AppTest()
    {
        super();

        mx_internal::_document = this;


		var bindings:Array = _AppTest_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_AppTestWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return AppTest[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.layout = "absolute";


        // events


		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_AppTest_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 4 - 11

		import com.shangkang.front.bo.Information;
		import com.shangkang.front.command.SimpleGenericCommand;
		[Bindable]		
		private var infor:Information = new Information(); 
		
		private var command:SimpleGenericCommand = new SimpleGenericCommand();
	

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function __btn1_click(event:flash.events.MouseEvent):void
{
	command.getUserById(Number(searchStr.text), lb, cv)
}

/**
 * @private
 **/
public function ___AppTest_Button2_click(event:flash.events.MouseEvent):void
{
	command.getInforById(Number(searchStr2.text), lb, cv, btn1)
}

/**
 * @private
 **/
public function ___AppTest_Button3_click(event:flash.events.MouseEvent):void
{
	command.insertInfo(infor)
}


	//	binding mgmt
    private function _AppTest_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (infor.name = user_name.text);
                return (result == undefined ? null : String(result));
            },
            null,
            "user_name.text"
            );

        result[1] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (infor.password);
                return (result == undefined ? null : String(result));
            },
            null,
            "user_password.text"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (AppTest)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;

	//	initialize style defs for AppTest

	mx_internal var _AppTest_StylesInit_done:Boolean = false;

	mx_internal function _AppTest_StylesInit():void
	{
		//	only add our style defs to the style manager once
		if (mx_internal::_AppTest_StylesInit_done)
			return;
		else
			mx_internal::_AppTest_StylesInit_done = true;
			
		var style:CSSStyleDeclaration;
		var effects:Array;
			        

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

		styleManager.initProtoChainRoots();
	}


    //  embed carrier vars
    //  end embed carrier vars

    //  binding management vars
    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

//  end class def
}

//  end package def
}
